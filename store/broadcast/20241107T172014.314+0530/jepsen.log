2024-11-07 17:20:14,355{GMT}	INFO	[jepsen test runner] jepsen.core: Test version adefd404d61ca3b680b49c9e70ab92fa062be021 (plus uncommitted changes)
2024-11-07 17:20:14,356{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin ./three/b/maelstrom-broadcast --node-count 5 --time-limit 20 --rate 10
2024-11-07 17:20:14,416{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 5
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x33e09baf"
         "maelstrom.db$db$reify__16142@33e09baf"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x105c253a" "2024-11-07T17:20:14.314+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x156322ce"
         "maelstrom.net$jepsen_net$reify__15251@156322ce"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x546f0f36"
         "maelstrom.workload.broadcast$client$reify__16644@546f0f36"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x44d5a0a8"
         "java.util.concurrent.CyclicBarrier@44d5a0a8"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x35d128fd"
         "jepsen.checker$compose$reify__11881@35d128fd"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "./three/b/maelstrom-broadcast"
  "--node-count"
  "5"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@39a809db"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@1512a767"]})
 :nodes ["n0" "n1" "n2" "n3" "n4"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./three/b/maelstrom-broadcast"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x5cdb7b"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@5cdb7b"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x3dcc59f5"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@3dcc59f5"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 1,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x690337df"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@690337df"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0xf62ae87"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@f62ae87"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x50be5d6f"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x48e0e779"
         "maelstrom.net$jepsen_os$reify__15254@48e0e779"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-11-07 17:20:15,287{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-11-07 17:20:15,288{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-11-07 17:20:15,290{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-11-07 17:20:15,290{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-11-07 17:20:15,290{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-11-07 17:20:15,290{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-11-07 17:20:15,290{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-11-07 17:20:15,291{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./three/b/maelstrom-broadcast []
2024-11-07 17:20:15,291{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./three/b/maelstrom-broadcast []
2024-11-07 17:20:15,291{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./three/b/maelstrom-broadcast []
2024-11-07 17:20:15,291{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./three/b/maelstrom-broadcast []
2024-11-07 17:20:15,292{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-11-07 17:20:15,294{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-11-07 17:20:15,295{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./three/b/maelstrom-broadcast []
2024-11-07 17:20:15,309{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-11-07 17:20:15,344{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-11-07 17:20:15,348{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[]
2024-11-07 17:20:15,430{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2024-11-07 17:20:15,435{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	[]
2024-11-07 17:20:15,630{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	0
2024-11-07 17:20:15,633{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	0
2024-11-07 17:20:15,711{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	1
2024-11-07 17:20:15,716{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	1
2024-11-07 17:20:15,807{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	2
2024-11-07 17:20:15,814{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	2
2024-11-07 17:20:15,931{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-11-07 17:20:15,936{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1 2]
2024-11-07 17:20:16,084{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-11-07 17:20:16,088{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1 2]
2024-11-07 17:20:16,090{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2024-11-07 17:20:16,092{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	[0 1 2]
2024-11-07 17:20:16,288{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-11-07 17:20:16,293{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[0 1 2]
2024-11-07 17:20:16,431{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-11-07 17:20:16,435{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[0 1 2]
2024-11-07 17:20:16,594{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	3
2024-11-07 17:20:16,599{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	3
2024-11-07 17:20:16,793{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-11-07 17:20:16,798{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1 2 3]
2024-11-07 17:20:16,858{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	4
2024-11-07 17:20:16,862{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	4
2024-11-07 17:20:17,052{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	5
2024-11-07 17:20:17,056{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	5
2024-11-07 17:20:17,201{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-11-07 17:20:17,205{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[0 1 2 3 4 5]
2024-11-07 17:20:17,319{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-11-07 17:20:17,323{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[5 0 1 2 3 4]
2024-11-07 17:20:17,430{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	6
2024-11-07 17:20:17,435{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	6
2024-11-07 17:20:17,503{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-11-07 17:20:17,506{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[1 2 3 4 5 6 0]
2024-11-07 17:20:17,552{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-11-07 17:20:17,555{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[6 0 1 2 3 4 5]
2024-11-07 17:20:17,581{GMT}	INFO	[Jepsen shutdown hook] jepsen.core: Downloading DB logs before JVM shutdown...
