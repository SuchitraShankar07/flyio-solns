2024-12-26 23:49:31,060{GMT}	INFO	[jepsen test runner] jepsen.core: Test version e215220be8e67f69e096936971d4b85062dfedd6 (plus uncommitted changes)
2024-12-26 23:49:31,060{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin ./three/c/maelstrom-broadcast --node-count 5 --time-limit 20 --rate 10 --nemesis partition
2024-12-26 23:49:31,180{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 5
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x473e0536"
         "maelstrom.db$db$reify__16142@473e0536"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x4c02f50" "2024-12-26T23:49:31.038+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x35852b6"
         "maelstrom.net$jepsen_net$reify__15251@35852b6"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x27d6ff8c"
         "maelstrom.workload.broadcast$client$reify__16644@27d6ff8c"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x105c253a"
         "java.util.concurrent.CyclicBarrier@105c253a"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x156322ce"
         "jepsen.checker$compose$reify__11881@156322ce"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "./three/c/maelstrom-broadcast"
  "--node-count"
  "5"
  "--time-limit"
  "20"
  "--rate"
  "10"
  "--nemesis"
  "partition")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@546f0f36"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@44d5a0a8"]})
 :nodes ["n0" "n1" "n2" "n3" "n4"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./three/c/maelstrom-broadcast"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x1ad4ff2a"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@1ad4ff2a"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 20000000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.FlipFlop
                                        {:gens [#object[jepsen.nemesis.combined$partition_package$start__16420
                                                        "0x625ae6d"
                                                        "jepsen.nemesis.combined$partition_package$start__16420@625ae6d"]
                                                ({:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 ...)],
                                         :i 0})})})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x5cdb7b"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@5cdb7b"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 0,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x3dcc59f5"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@3dcc59f5"],
           :gen ({:type :info, :f :stop-partition, :value nil})})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x16b1dee7"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@16b1dee7"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x690337df"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0xf62ae87"
         "maelstrom.net$jepsen_os$reify__15254@f62ae87"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-12-26 23:49:32,029{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-12-26 23:49:32,031{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-12-26 23:49:32,033{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-12-26 23:49:32,034{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-12-26 23:49:32,034{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-12-26 23:49:32,034{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-12-26 23:49:32,034{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-12-26 23:49:32,034{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:49:32,034{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:49:32,034{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:49:32,034{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:49:32,035{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-12-26 23:49:32,040{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-12-26 23:49:32,042{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:49:32,065{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-12-26 23:49:32,095{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	:majorities-ring
2024-12-26 23:49:32,095{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2024-12-26 23:49:32,101{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	0
2024-12-26 23:49:32,102{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	[:isolated {"n1" #{"n2" "n0"}, "n4" #{"n0" "n3"}, "n2" #{"n1" "n3"}, "n0" #{"n1" "n4"}, "n3" #{"n2" "n4"}}]
2024-12-26 23:49:32,111{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	1
2024-12-26 23:49:32,114{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	1
2024-12-26 23:49:32,295{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-12-26 23:49:32,300{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:read	[0 1]
2024-12-26 23:49:32,325{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-12-26 23:49:32,329{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[1 0]
2024-12-26 23:49:32,524{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	2
2024-12-26 23:49:32,529{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	2
2024-12-26 23:49:32,557{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-12-26 23:49:32,562{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 1 2]
2024-12-26 23:49:32,740{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	3
2024-12-26 23:49:32,745{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	3
2024-12-26 23:49:32,925{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-12-26 23:49:32,929{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[0 1 2 3]
2024-12-26 23:49:32,933{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	4
2024-12-26 23:49:32,936{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	4
2024-12-26 23:49:32,971{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-12-26 23:49:32,975{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[0 1 2 3 4]
2024-12-26 23:49:33,150{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	5
2024-12-26 23:49:33,223{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	6
2024-12-26 23:49:33,338{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-12-26 23:49:33,460{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-12-26 23:49:33,488{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-12-26 23:49:38,155{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:broadcast	5	:net-timeout
2024-12-26 23:49:38,157{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	7
2024-12-26 23:49:38,226{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:broadcast	6	:net-timeout
2024-12-26 23:49:38,329{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:broadcast	8
2024-12-26 23:49:38,338{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:fail	:read	nil	:net-timeout
2024-12-26 23:49:38,470{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:fail	:read	nil	:net-timeout
2024-12-26 23:49:38,488{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:fail	:read	nil	:net-timeout
2024-12-26 23:49:38,517{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	9
2024-12-26 23:49:38,537{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-12-26 23:49:38,567{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	10
2024-12-26 23:49:43,161{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:info	:broadcast	7	:net-timeout
2024-12-26 23:49:43,164{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	11
2024-12-26 23:49:43,332{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:info	:broadcast	8	:net-timeout
2024-12-26 23:49:43,334{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:broadcast	12
2024-12-26 23:49:43,517{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:broadcast	9	:net-timeout
2024-12-26 23:49:43,518{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:read	nil
2024-12-26 23:49:43,537{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:fail	:read	nil	:net-timeout
2024-12-26 23:49:43,567{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:info	:broadcast	10	:net-timeout
2024-12-26 23:49:43,652{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	13
2024-12-26 23:49:43,682{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-12-26 23:49:45,383{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	nil
2024-12-26 23:49:45,384{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	:network-healed
2024-12-26 23:49:48,170{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:info	:broadcast	11	:net-timeout
2024-12-26 23:49:48,172{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:read	nil
2024-12-26 23:49:48,337{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:info	:broadcast	12	:net-timeout
2024-12-26 23:49:48,347{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:broadcast	14
2024-12-26 23:49:48,519{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:fail	:read	nil	:net-timeout
2024-12-26 23:49:48,541{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:broadcast	15
2024-12-26 23:49:48,654{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:broadcast	13	:net-timeout
2024-12-26 23:49:48,656{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:broadcast	16
2024-12-26 23:49:48,701{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-12-26 23:49:48,803{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-12-26 23:49:53,177{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:fail	:read	nil	:net-timeout
2024-12-26 23:49:53,348{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:info	:broadcast	14	:net-timeout
2024-12-26 23:49:53,547{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:info	:broadcast	15	:net-timeout
2024-12-26 23:49:53,658{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:info	:broadcast	16	:net-timeout
2024-12-26 23:49:53,804{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-12-26 23:49:53,805{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	nil
2024-12-26 23:49:53,805{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	:network-healed
2024-12-26 23:49:53,808{GMT}	INFO	[jepsen worker 3] jepsen.generator.interpreter: Waiting for recovery...
2024-12-26 23:50:03,819{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-12-26 23:50:03,819{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:read	nil
2024-12-26 23:50:03,821{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:invoke	:read	nil
2024-12-26 23:50:03,821{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:read	nil
2024-12-26 23:50:03,820{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:invoke	:read	nil
2024-12-26 23:50:08,820{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-12-26 23:50:08,821{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:fail	:read	nil	:net-timeout
2024-12-26 23:50:08,824{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:fail	:read	nil	:net-timeout
2024-12-26 23:50:08,825{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:fail	:read	nil	:net-timeout
2024-12-26 23:50:08,826{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:fail	:read	nil	:net-timeout
2024-12-26 23:50:08,884{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-12-26 23:50:08,977{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-12-26 23:50:08,978{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-12-26 23:50:08,978{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-12-26 23:50:08,979{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-12-26 23:50:08,979{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-12-26 23:50:09,833{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-12-26 23:50:09,839{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n0 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"src":"n0","dest":"c6","body":{"in_reply_to":1,"type":"topology_ok"}}
{"src":"n0","dest":"c10","body":{"in_reply_to":1,"type":"broadcast_ok"}}
{"src":"n0","dest":"n4","body":{"message":0,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n2","body":{"message":0,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n1","body":{"message":0,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n0","body":{"message":0,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n3","body":{"message":0,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n2","body":{"in_reply_to":1,"type":"broadcast_ok"}}
{"src":"n0","dest":"n0","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n1","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n3","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n4","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n2","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"c10","body":{"in_reply_to":2,"type":"broadcast_ok"}}
{"src":"n0","dest":"n1","body":{"message":2,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"n3","body":{"message":2,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"n4","body":{"message":2,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"n2","body":{"message":2,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"n0","body":{"message":2,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"c10","body":{"in_reply_to":3,"messages":[0,1,2],"type":"read_ok"}}
{"src":"n0","dest":"n3","body":{"in_reply_to":1,"type":"broadcast_ok"}}
{"src":"n0","dest":"n0","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n1","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n2","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n3","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n4","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n0","dest":"n3","body":{"in_reply_to":2,"type":"broadcast_ok"}}
{"src":"n0","dest":"n2","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"n1","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"n3","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"n4","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n0","dest":"n0","body":{"message":4,"msg_id":2,"type":"broadcast"}}

And to STDERR:

2024/12/26 23:49:32 Sent {"src":"n0","dest":"n0","body":{"message":2,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n3 n0 {"in_reply_to":2,"type":"broadcast_ok"}}
2024/12/26 23:49:32 Ignoring reply to 2 with no callback
2024/12/26 23:49:32 Received {n0 n0 {"message":2,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n2 n0 {"message":2,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n3 n0 {"message":2,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n2 n0 {"in_reply_to":2,"type":"broadcast_ok"}}
2024/12/26 23:49:32 Ignoring reply to 2 with no callback
2024/12/26 23:49:32 Received {c10 n0 {"type":"read","msg_id":3}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"c10","body":{"in_reply_to":3,"messages":[0,1,2],"type":"read_ok"}}
2024/12/26 23:49:32 Received {n3 n0 {"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n3","body":{"in_reply_to":1,"type":"broadcast_ok"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n0","body":{"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n1","body":{"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n2","body":{"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n3","body":{"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n4","body":{"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n2 n0 {"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n0 n0 {"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n3 n0 {"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n3","body":{"in_reply_to":2,"type":"broadcast_ok"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n2","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n1","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n3","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n4","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Sent {"src":"n0","dest":"n0","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n0 n0 {"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:32 Received {n2 n0 {"in_reply_to":2,"type":"broadcast_ok"}}
2024/12/26 23:49:32 Ignoring reply to 2 with no callback
2024/12/26 23:49:32 Received {n2 n0 {"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:49:33 Received {n3 n0 {"ids":[2,3,4,0,1],"type":"sync"}}
2024/12/26 23:49:33 No handler for {"id":186,"src":"n3","dest":"n0","body":{"ids":[2,3,4,0,1],"type":"sync"}}

Full STDERR logs are available in /home/Suchitra/Desktop/flyio/maelstrom/store/broadcast/20241226T234931.038+0530/node-logs/n0.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1575)
