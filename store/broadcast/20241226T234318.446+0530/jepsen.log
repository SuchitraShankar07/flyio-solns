2024-12-26 23:43:18,477{GMT}	INFO	[jepsen test runner] jepsen.core: Test version e215220be8e67f69e096936971d4b85062dfedd6 (plus uncommitted changes)
2024-12-26 23:43:18,478{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin ./three/c/maelstrom-broadcast --node-count 5 --time-limit 20 --rate 10 --nemesis partition
2024-12-26 23:43:18,539{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 5
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x33e09baf"
         "maelstrom.db$db$reify__16142@33e09baf"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x105c253a" "2024-12-26T23:43:18.446+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x156322ce"
         "maelstrom.net$jepsen_net$reify__15251@156322ce"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x546f0f36"
         "maelstrom.workload.broadcast$client$reify__16644@546f0f36"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x44d5a0a8"
         "java.util.concurrent.CyclicBarrier@44d5a0a8"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x35d128fd"
         "jepsen.checker$compose$reify__11881@35d128fd"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "./three/c/maelstrom-broadcast"
  "--node-count"
  "5"
  "--time-limit"
  "20"
  "--rate"
  "10"
  "--nemesis"
  "partition")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@39a809db"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@1512a767"]})
 :nodes ["n0" "n1" "n2" "n3" "n4"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./three/c/maelstrom-broadcast"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x5cdb7b"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@5cdb7b"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 20000000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.FlipFlop
                                        {:gens [#object[jepsen.nemesis.combined$partition_package$start__16420
                                                        "0x3dcc59f5"
                                                        "jepsen.nemesis.combined$partition_package$start__16420@3dcc59f5"]
                                                ({:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 ...)],
                                         :i 0})})})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x690337df"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@690337df"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 0,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0xf62ae87"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@f62ae87"],
           :gen ({:type :info, :f :stop-partition, :value nil})})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x50be5d6f"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@50be5d6f"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x48e0e779"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x38ad8c75"
         "maelstrom.net$jepsen_os$reify__15254@38ad8c75"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-12-26 23:43:19,479{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-12-26 23:43:19,480{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-12-26 23:43:19,481{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-12-26 23:43:19,482{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-12-26 23:43:19,482{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-12-26 23:43:19,482{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-12-26 23:43:19,482{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-12-26 23:43:19,483{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:43:19,483{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:43:19,483{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:43:19,483{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:43:19,485{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-12-26 23:43:19,486{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-12-26 23:43:19,487{GMT}	INFO	[jepsen node n0] maelstrom.process: launching ./three/c/maelstrom-broadcast []
2024-12-26 23:43:19,506{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-12-26 23:43:19,523{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	:minority-third
2024-12-26 23:43:19,523{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2024-12-26 23:43:19,526{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	0
2024-12-26 23:43:19,530{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	[:isolated {"n0" #{"n2" "n1" "n4" "n3"}, "n2" #{"n0"}, "n1" #{"n0"}, "n4" #{"n0"}, "n3" #{"n0"}}]
2024-12-26 23:43:19,586{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-12-26 23:43:19,588{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[]
2024-12-26 23:43:19,721{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	1
2024-12-26 23:43:19,726{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	1
2024-12-26 23:43:19,737{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:read	nil
2024-12-26 23:43:19,743{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:read	[1]
2024-12-26 23:43:19,805{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	2
2024-12-26 23:43:19,810{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	2
2024-12-26 23:43:19,887{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-12-26 23:43:19,890{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 2]
2024-12-26 23:43:19,981{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	3
2024-12-26 23:43:19,987{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:broadcast	3
2024-12-26 23:43:20,096{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-12-26 23:43:20,101{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:read	[1 3]
2024-12-26 23:43:20,181{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	4
2024-12-26 23:43:20,185{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:ok	:broadcast	4
2024-12-26 23:43:20,250{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	5
2024-12-26 23:43:20,254{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:ok	:broadcast	5
2024-12-26 23:43:20,428{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-12-26 23:43:20,431{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[0 2]
2024-12-26 23:43:20,550{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	6
2024-12-26 23:43:20,569{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	7
2024-12-26 23:43:20,607{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-12-26 23:43:20,782{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	8
2024-12-26 23:43:20,871{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	9
2024-12-26 23:43:25,554{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:broadcast	6	:net-timeout
2024-12-26 23:43:25,556{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	10
2024-12-26 23:43:25,570{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:broadcast	7	:net-timeout
2024-12-26 23:43:25,607{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:fail	:read	nil	:net-timeout
2024-12-26 23:43:25,680{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:broadcast	11
2024-12-26 23:43:25,788{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:broadcast	8	:net-timeout
2024-12-26 23:43:25,807{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-12-26 23:43:25,871{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:info	:broadcast	9	:net-timeout
2024-12-26 23:43:25,913{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:read	nil
2024-12-26 23:43:25,955{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-12-26 23:43:30,559{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:info	:broadcast	10	:net-timeout
2024-12-26 23:43:30,561{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-12-26 23:43:30,681{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:info	:broadcast	11	:net-timeout
2024-12-26 23:43:30,687{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:broadcast	12
2024-12-26 23:43:30,811{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:fail	:read	nil	:net-timeout
2024-12-26 23:43:30,816{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:read	nil
2024-12-26 23:43:30,914{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:fail	:read	nil	:net-timeout
2024-12-26 23:43:30,917{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:broadcast	13
2024-12-26 23:43:30,956{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-12-26 23:43:30,974{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-12-26 23:43:32,651{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	nil
2024-12-26 23:43:32,656{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	:network-healed
2024-12-26 23:43:33,581{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	:majority
2024-12-26 23:43:33,595{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	[:isolated {"n0" #{"n2" "n1" "n4"}, "n3" #{"n2" "n1" "n4"}, "n2" #{"n0" "n3"}, "n1" #{"n0" "n3"}, "n4" #{"n0" "n3"}}]
2024-12-26 23:43:35,569{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:fail	:read	nil	:net-timeout
2024-12-26 23:43:35,569{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	14
2024-12-26 23:43:35,701{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:info	:broadcast	12	:net-timeout
2024-12-26 23:43:35,770{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:broadcast	15
2024-12-26 23:43:35,821{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:fail	:read	nil	:net-timeout
2024-12-26 23:43:35,837{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	16
2024-12-26 23:43:35,919{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:info	:broadcast	13	:net-timeout
2024-12-26 23:43:35,986{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-12-26 23:43:36,024{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:invoke	:broadcast	17
2024-12-26 23:43:36,203{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-12-26 23:43:40,574{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:info	:broadcast	14	:net-timeout
2024-12-26 23:43:40,775{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:info	:broadcast	15	:net-timeout
2024-12-26 23:43:40,839{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:broadcast	16	:net-timeout
2024-12-26 23:43:41,031{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:info	:broadcast	17	:net-timeout
2024-12-26 23:43:41,205{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-12-26 23:43:41,212{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	nil
2024-12-26 23:43:41,212{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	:network-healed
2024-12-26 23:43:41,214{GMT}	INFO	[jepsen worker nemesis] jepsen.generator.interpreter: Waiting for recovery...
2024-12-26 23:43:51,235{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:read	nil
2024-12-26 23:43:51,237{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:invoke	:read	nil
2024-12-26 23:43:51,238{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:read	nil
2024-12-26 23:43:51,240{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-12-26 23:43:51,242{GMT}	INFO	[jepsen worker 3] jepsen.util: 18	:invoke	:read	nil
2024-12-26 23:43:56,237{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:fail	:read	nil	:net-timeout
2024-12-26 23:43:56,239{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:fail	:read	nil	:net-timeout
2024-12-26 23:43:56,240{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:fail	:read	nil	:net-timeout
2024-12-26 23:43:56,244{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-12-26 23:43:56,244{GMT}	INFO	[jepsen worker 3] jepsen.util: 18	:fail	:read	nil	:net-timeout
2024-12-26 23:43:56,320{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-12-26 23:43:56,477{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-12-26 23:43:56,477{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-12-26 23:43:56,478{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-12-26 23:43:56,479{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-12-26 23:43:56,479{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-12-26 23:43:57,243{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-12-26 23:43:57,245{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n2 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"src":"n2","dest":"c7","body":{"in_reply_to":1,"type":"topology_ok"}}
{"src":"n2","dest":"c11","body":{"in_reply_to":1,"messages":[],"type":"read_ok"}}
{"src":"n2","dest":"n3","body":{"in_reply_to":1,"type":"broadcast_ok"}}
{"src":"n2","dest":"n4","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n2","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n3","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n0","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n1","body":{"message":1,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n1","body":{"in_reply_to":1,"type":"broadcast_ok"}}
{"src":"n2","dest":"n4","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n2","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n3","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n0","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"n1","body":{"message":3,"msg_id":1,"type":"broadcast"}}
{"src":"n2","dest":"c11","body":{"in_reply_to":2,"messages":[1,3],"type":"read_ok"}}
{"src":"n2","dest":"n3","body":{"in_reply_to":2,"type":"broadcast_ok"}}
{"src":"n2","dest":"n4","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n2","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n3","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n0","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n1","body":{"message":4,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n4","body":{"in_reply_to":2,"type":"broadcast_ok"}}
{"src":"n2","dest":"n4","body":{"message":5,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n2","body":{"message":5,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n0","body":{"message":5,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n1","body":{"message":5,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n3","body":{"message":5,"msg_id":2,"type":"broadcast"}}
{"src":"n2","dest":"n4","body":{"ids":[1,3,4,5],"type":"sync"}}
{"src":"n2","dest":"n0","body":{"ids":[1,3,4,5],"type":"sync"}}
{"src":"n2","dest":"n1","body":{"ids":[1,3,4,5],"type":"sync"}}
{"src":"n2","dest":"n2","body":{"ids":[1,3,4,5],"type":"sync"}}
{"src":"n2","dest":"n3","body":{"ids":[1,3,4,5],"type":"sync"}}

And to STDERR:

2024/12/26 23:43:19 Received {n2 n2 {"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:43:19 Received {n4 n2 {"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:43:19 Received {n3 n2 {"message":3,"msg_id":1,"type":"broadcast"}}
2024/12/26 23:43:20 Received {c11 n2 {"type":"read","msg_id":2}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"c11","body":{"in_reply_to":2,"messages":[1,3],"type":"read_ok"}}
2024/12/26 23:43:20 Received {n3 n2 {"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n3","body":{"in_reply_to":2,"type":"broadcast_ok"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n4","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n2","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n3","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n0","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n1","body":{"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Received {n1 n2 {"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Received {n2 n2 {"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Received {n4 n2 {"message":4,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Received {n4 n2 {"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n4","body":{"in_reply_to":2,"type":"broadcast_ok"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n4","body":{"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n2","body":{"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n0","body":{"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n1","body":{"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n3","body":{"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Received {n2 n2 {"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Received {n1 n2 {"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Received {n3 n2 {"message":5,"msg_id":2,"type":"broadcast"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n4","body":{"ids":[1,3,4,5],"type":"sync"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n0","body":{"ids":[1,3,4,5],"type":"sync"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n1","body":{"ids":[1,3,4,5],"type":"sync"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n2","body":{"ids":[1,3,4,5],"type":"sync"}}
2024/12/26 23:43:20 Sent {"src":"n2","dest":"n3","body":{"ids":[1,3,4,5],"type":"sync"}}
2024/12/26 23:43:20 Received {n3 n2 {"ids":[5,1,3,4],"type":"sync"}}
2024/12/26 23:43:20 No handler for {"id":150,"src":"n3","dest":"n2","body":{"ids":[5,1,3,4],"type":"sync"}}

Full STDERR logs are available in /home/Suchitra/Desktop/flyio/maelstrom/store/broadcast/20241226T234318.446+0530/node-logs/n2.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1575)
